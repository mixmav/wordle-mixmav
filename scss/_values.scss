.z-depth-scrolled{
	box-shadow: 0 4px 5px 0 rgba(0,0,0,0.14), 0 1px 10px 0 rgba(0,0,0,0.12), 0 2px 4px -1px rgba(0,0,0,0.2);
}

.z-depth-1 {
	box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);
}

.z-depth-1-half {
	box-shadow: 0 5px 11px 0 rgba(0, 0, 0, 0.18), 0 4px 15px 0 rgba(0, 0, 0, 0.15);
}

.z-depth-2 {
	box-shadow: 0 8px 17px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
}

.z-depth-3 {
	box-shadow: 0 12px 15px 0 rgba(0, 0, 0, 0.24), 0 17px 50px 0 rgba(0, 0, 0, 0.19);
}

.z-depth-4 {
	box-shadow: 0 16px 28px 0 rgba(0, 0, 0, 0.22), 0 25px 55px 0 rgba(0, 0, 0, 0.21);
}

.z-depth-5 {
	box-shadow: 0 27px 24px 0 rgba(0, 0, 0, 0.2), 0 40px 77px 0 rgba(0, 0, 0, 0.22);
}

.no-select{
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	-webkit-tap-highlight-color: rgba(0,0,0,0);
	-webkit-tap-highlight-color: transparent;
}

@keyframes ripple{
	to{
		transform: scale(24);
		opacity: 0;
	}
}

i, span{
	color: inherit;
}


//EXTRACTING DIALOG STYLE FROM DIALOG COMPONENTS
.generic-dialog-container{
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: rgba(black, 0.3);

	& > .container{
		padding: 1.2em;
		width: 100%;
		height: 100%;
		margin: 70px auto;
		background: white;
		overflow: auto;
		border-radius: 10px;
	}
}

@include media-y(670px){
	.generic-dialog-container{
		& > .container{
			margin-top: 0 !important;
			max-height: 100% !important;
			border-radius: 0 !important;
		}
	}
}

.text-decor{
	@each $color, $hex in $colors {
		&.#{$color} {
			color: $hex;
		}
	}

	&.bold{
		font-weight: 600;
	}
	&.italic{
		font-style: italic;
	}
}

.text-input{
	border: none {
		bottom: solid 2px rgba(black, 0.6);
	}
	background: transparent;
	display: inline-block;
	transition: all .2s;
	padding: 1em{
		left: .5em;
		bottom: .5em;
	}
	&:focus{
		outline: 0;
		padding: {
			left: 1em;
			right: .5em;
		}
		border-color: $primary-color;
	}

	&.full-width{
		width: 100%;
	}

	@each $color, $hex in $colors {
		&.#{$color} {
			border-color: $hex;
		}
	}
}

.btn{
	@extend .no-select;
	padding: .8em {
		left: 1.3em;
		right: 1.3em;
	}
	border: none;
	cursor: pointer;
	display: inline-block;
	background: $secondary-color;
	color: white;
	text-decoration: none;
	transition: all .2s;
	font: {
		size: .8em;
		weight: bold;
    }
    &:focus{
		outline: 0;
		box-shadow: 0 0 0 3px rgba($secondary-color, 0.4);
	}
	&:active{
		transform: scale(0.98, 0.97);
	}
	& > i{
		color: inherit;
		position: relative;
		right: 5px;
		font-size: inherit;
	}
	& > span{
		color: inherit;
		font-size: inherit;
		font-weight: inherit;	
	}
	&.full-width{
		width: 100%;
		display: block;
		text-align: center;
	}

	&.jumbo{
		padding: 1.4em {
			left: 1.4em;
			right: 1.4em;
		}
	}

	&.light{
		background: white;
		color: $primary-color;
		&:focus{
			box-shadow: 0 0 0 3px rgba(white, 0.5);
		}
	}

	&.disabled, &:disabled{
		box-shadow: none;
		cursor: default;
		opacity: 0.7;
		pointer-events: none;
	}

	@each $color, $hex in $colors {
		&.#{$color} {
			background: $hex;
			&:focus{
				box-shadow: 0 0 0 3px rgba($hex, 0.4);
			}
		}
	}
}

.icon-btn{
	padding: .8em {
		left: 1em;
		right: 1em
	}
	font-size: 1em;
	border-radius: 100%;
	position: relative;
	display: inline-block;
	background: $primary-color;
	border: none;
	cursor: pointer;
	color: white;
	position: relative;
    @extend .no-select;
	transition: all .15s;
	
	&:focus {
		outline: 0;
	}

	&:active{
		transform: scale(0.95, 0.95);
	}

	i{
		font-size: inherit;
		color: inherit;
	}

	&.disabled, &:disabled{
		cursor: default;
		opacity: 0.7;
		pointer-events: none;
	}

	@each $color, $hex in $colors {
		&.#{$color} {
			background: $hex;
		}
	}
}

.a{
	text-decoration: none;
	background: transparent;
	display: inline-block;
	@extend .no-select;
	border: none;
	cursor: pointer;
	position: relative;
	color: $secondary-color;
	transition: all .15s;
	font-weight: 700;
	padding-bottom: 3px;
	font-size: 1em;

	@each $color, $hex in $colors {
		&.#{$color} {
			color: $hex;
		}
	}

	i{
		margin-right: 5px;
		transition: all .2s;
	}

	&::after {
		bottom: 0;
		content: "";
		display: block;
		height: 1px;
		left: 50%;
		position: absolute;
		background: $secondary-color;
		transition: all .2s ease;
		width: 0;
	}
	&:hover{
		// color: $primary-color;	
		&::after{ 
			width: 100%; 
			left: 0;
		}
	}
	&:active{
		transform: scale(0.95, 0.95);
	}
}

.custom-scrollbar{
	&::-webkit-scrollbar{
		width: 6px;
		height: 14px;
	}
	&::-webkit-scrollbar-thumb{
		background: $blue;
		border-radius: 13px;
	}

	&::-webkit-scrollbar-track{
		background: #FFFFFF;
		border: 4px solid #FFFFFF;
		border-radius: 13px;
		box-shadow: inset 3px 3px 21px 0px #2f2f2f;
	}
}

@for $i from 1 to 10 /*margin-top 10px to 20px, used as .mt-10, .mt-20 etc */ {
	.mt-#{$i}0{
		margin-top: ($i * 10) + px;
	}
	.ml-#{$i}0{
		margin-left: ($i * 10) + px;
	}
}

// Vue transitions
.translate-y-minus-100percent-enter-active, .translate-y-minus-100percent-leave-active {
	transition: transform .3s;
	transition-timing-function: cubic-bezier(0.0, 0.0, 0.2, 1);
}
.translate-y-minus-100percent-enter, .translate-y-minus-100percent-leave-to {
	transform: translateY(-100%);
	transition-timing-function: cubic-bezier(0.4, 0.0, 1, 1);
}

.translate-y-100percent-enter-active, .translate-y-100percent-leave-active {
	transition: transform .3s;
	transition-timing-function: cubic-bezier(0.0, 0.0, 0.2, 1);
}
.translate-y-100percent-enter, .translate-y-100percent-leave-to {
	transform: translateY(100%);
	transition-timing-function: cubic-bezier(0.4, 0.0, 1, 1);
}

.translate-y-minus-100px-enter-active, .translate-y-minus-100px-leave-active {
	transition: transform .3s;
	transition-timing-function: cubic-bezier(0.0, 0.0, 0.2, 1);
}
.translate-y-minus-100px-enter, .translate-y-minus-100px-leave-to {
	transform: translateY(-100px);
	transition-timing-function: cubic-bezier(0.4, 0.0, 1, 1);
}




.translate-x-minus-100px-opacity-enter-active, .translate-x-minus-100px-opacity-leave-active {
	transition: all .3s;
}
.translate-x-minus-100px-opacity-enter, .translate-x-minus-100px-opacity-leave-to {
	transform: translateX(-100px);
	opacity: 0;
}

.translate-x-100px-opacity-enter-active, .translate-x-100px-opacity-leave-active {
	transition: all .3s;
}
.translate-x-100px-opacity-enter, .translate-x-100px-opacity-leave-to {
	transform: translateX(100px);
	opacity: 0;
}


.translate-y-minus-100px-enter-active, .translate-y-minus-100px-leave-active {
	transition: transform .3s;
	// transition-timing-function: cubic-bezier(0.0, 0.0, 0.2, 1);
}
.translate-y-minus-100px-enter, .translate-y-minus-100px-leave-to {
	transform: translateY(-100px);
}

.translate-y-100px-opacity-enter-active, .translate-y-100px-opacity-leave-active {
	transition: all .25s;
	// transition-timing-function: cubic-bezier(0.0, 0.0, 0.2, 1);
}
.translate-y-100px-opacity-enter, .translate-y-100px-opacity-leave-to {
	transform: translateY(100px);
	opacity: 0;
}

.router-view-enter-active, .router-view-leave-active {
    transition: all .3s;
}
.router-view-enter, .router-view-leave-to {
	opacity: 0;
}

.opacity-50percent-enter-active, .opacity-50percent-leave-active {
    transition: opacity .2s;
}
.opacity-50percent-enter, .opacity-50percent-leave-to {
	opacity: 0.5;
}

.opacity-enter-active, .opacity-leave-active {
    transition: opacity .2s;
}
.opacity-enter, .opacity-leave-to {
	opacity: 0;
}

.transform-scale-full-enter-active, .transform-scale-full-leave-active {
	transition: transform .2s;
}
.transform-scale-full-enter, .transform-scale-full-leave-to {
	transform: scale(0, 0);
}




@keyframes rotateFull{
	from {
		transform: rotate(0);
	} to {
		transform: rotate(360deg);
	}
}

@keyframes scaleBounce{
	0% {
		transform: scale(1);
	}
  	50% {
  		transform: scale(1.3);
  	}
	60% {
		transform: scale(0.9);
	}
	100% {
		transform: scale(1) 
	}
}

@keyframes glow {
	from {
		box-shadow: 0 0 10px -8px white;
	}
	
	to {
		box-shadow: 0 0 10px 8px white;
	}
}